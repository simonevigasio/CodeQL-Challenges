static void test_func_fields ( ) {
 int rc ;
 MYSQL_RES * result ;
 MYSQL_FIELD * field ;
 myheader ( "test_func_fields" ) ;
 rc = mysql_autocommit ( mysql , TRUE ) ;
 myquery ( rc ) ;
 rc = mysql_query ( mysql , "DROP TABLE IF EXISTS test_dateformat" ) ;
 myquery ( rc ) ;
 rc = mysql_query ( mysql , "CREATE TABLE test_dateformat(id int, \ ts timestamp)" ) ;
 myquery ( rc ) ;
 rc = mysql_query ( mysql , "INSERT INTO test_dateformat(id) values(10)" ) ;
 myquery ( rc ) ;
 rc = mysql_query ( mysql , "SELECT ts FROM test_dateformat" ) ;
 myquery ( rc ) ;
 result = mysql_store_result ( mysql ) ;
 mytest ( result ) ;
 field = mysql_fetch_field ( result ) ;
 mytest ( field ) ;
 if ( ! opt_silent ) fprintf ( stdout , "\n table name: `%s` (expected: `%s`)" , field -> table , "test_dateformat" ) ;
 DIE_UNLESS ( strcmp ( field -> table , "test_dateformat" ) == 0 ) ;
 field = mysql_fetch_field ( result ) ;
 mytest_r ( field ) ;
 mysql_free_result ( result ) ;
 rc = mysql_query ( mysql , "SELECT DATE_FORMAT(ts, '%Y') AS 'venu' FROM test_dateformat" ) ;
 myquery ( rc ) ;
 result = mysql_store_result ( mysql ) ;
 mytest ( result ) ;
 field = mysql_fetch_field ( result ) ;
 mytest ( field ) ;
 if ( ! opt_silent ) fprintf ( stdout , "\n table name: `%s` (expected: `%s`)" , field -> table , "" ) ;
 DIE_UNLESS ( field -> table [ 0 ] == '\0' ) ;
 field = mysql_fetch_field ( result ) ;
 mytest_r ( field ) ;
 mysql_free_result ( result ) ;
 rc = mysql_query ( mysql , "SELECT DATE_FORMAT(ts, '%Y') AS 'YEAR' FROM test_dateformat" ) ;
 myquery ( rc ) ;
 result = mysql_store_result ( mysql ) ;
 mytest ( result ) ;
 field = mysql_fetch_field ( result ) ;
 mytest ( field ) ;
 if ( ! opt_silent ) {
 printf ( "\n field name: `%s` (expected: `%s`)" , field -> name , "YEAR" ) ;
 printf ( "\n field org name: `%s` (expected: `%s`)" , field -> org_name , "" ) ;
 }
 DIE_UNLESS ( strcmp ( field -> name , "YEAR" ) == 0 ) ;
 DIE_UNLESS ( field -> org_name [ 0 ] == '\0' ) ;
 field = mysql_fetch_field ( result ) ;
 mytest_r ( field ) ;
 mysql_free_result ( result ) ;
 }